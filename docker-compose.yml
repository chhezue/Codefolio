version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: codefolio-db
    environment:
      POSTGRES_USER: codefolio
      POSTGRES_PASSWORD: codefolio
      POSTGRES_DB: codefolio
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - codefolio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codefolio"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: codefolio-server
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: codefolio
      POSTGRES_PASSWORD: codefolio
      POSTGRES_DB: codefolio
      DATABASE_SSL: 'false'
      WATCHPACK_POLLING: 'true'
      CHOKIDAR_USEPOLLING: 'true'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - codefolio-network
    volumes:
      - ./server:/app:cached
      - /app/node_modules

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: codefolio-client
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - REACT_APP_API_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false
    depends_on:
      - server
    networks:
      - codefolio-network
    volumes:
      - ./client:/app:cached
      - /app/node_modules

networks:
  codefolio-network:
    driver: bridge

volumes:
  postgres_data: 